{"fileName":"ERC165.sol","contractName":"ERC165","source":"pragma solidity ^0.5.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the `IERC165` interface.\n *\n * Contracts may inherit from this and call `_registerInterface` to declare\n * their support of an interface.\n */\ncontract ERC165 is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Mapping of interface ids to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor () internal {\n        // Derived contracts need only register support for their own interfaces,\n        // we register support for ERC165 itself here\n        _registerInterface(_INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev See `IERC165.supportsInterface`.\n     *\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Registers the contract as an implementer of the interface defined by\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\n     * registering its interface id is not required.\n     *\n     * See `IERC165.supportsInterface`.\n     *\n     * Requirements:\n     *\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n     */\n    function _registerInterface(bytes4 interfaceId) internal {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n","sourcePath":"openzeppelin-solidity/contracts/introspection/ERC165.sol","sourceMap":"","deployedSourceMap":"","abi":[{"constant":true,"inputs":[{"name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"ast":{"absolutePath":"openzeppelin-solidity/contracts/introspection/ERC165.sol","exportedSymbols":{"ERC165":[686]},"id":687,"nodeType":"SourceUnit","nodes":[{"id":636,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:6"},{"absolutePath":"openzeppelin-solidity/contracts/introspection/IERC165.sol","file":"./IERC165.sol","id":637,"nodeType":"ImportDirective","scope":687,"sourceUnit":697,"src":"25:23:6","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":638,"name":"IERC165","nodeType":"UserDefinedTypeName","referencedDeclaration":696,"src":"241:7:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$696","typeString":"contract IERC165"}},"id":639,"nodeType":"InheritanceSpecifier","src":"241:7:6"}],"contractDependencies":[696],"contractKind":"contract","documentation":"@dev Implementation of the `IERC165` interface.\n * Contracts may inherit from this and call `_registerInterface` to declare\ntheir support of an interface.","fullyImplemented":true,"id":686,"linearizedBaseContracts":[686,696],"name":"ERC165","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":642,"name":"_INTERFACE_ID_ERC165","nodeType":"VariableDeclaration","scope":686,"src":"338:57:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":640,"name":"bytes4","nodeType":"ElementaryTypeName","src":"338:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30783031666663396137","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"385:10:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_33540519_by_1","typeString":"int_const 33540519"},"value":"0x01ffc9a7"},"visibility":"private"},{"constant":false,"id":646,"name":"_supportedInterfaces","nodeType":"VariableDeclaration","scope":686,"src":"489:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":645,"keyType":{"id":643,"name":"bytes4","nodeType":"ElementaryTypeName","src":"497:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"489:23:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueType":{"id":644,"name":"bool","nodeType":"ElementaryTypeName","src":"507:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"private"},{"body":{"id":653,"nodeType":"Block","src":"572:193:6","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":650,"name":"_INTERFACE_ID_ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"737:20:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":649,"name":"_registerInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"718:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes4_$returns$__$","typeString":"function (bytes4)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"718:40:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"718:40:6"}]},"documentation":null,"id":654,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"560:2:6"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"572:0:6"},"scope":686,"src":"548:217:6","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":665,"nodeType":"Block","src":"991:57:6","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":661,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"1008:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":663,"indexExpression":{"argumentTypes":null,"id":662,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"1029:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1008:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":660,"id":664,"nodeType":"Return","src":"1001:40:6"}]},"documentation":"@dev See `IERC165.supportsInterface`.\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.","id":666,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"name":"interfaceId","nodeType":"VariableDeclaration","scope":666,"src":"942:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":655,"name":"bytes4","nodeType":"ElementaryTypeName","src":"942:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"941:20:6"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"name":"","nodeType":"VariableDeclaration","scope":666,"src":"985:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":658,"name":"bool","nodeType":"ElementaryTypeName","src":"985:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"984:6:6"},"scope":686,"src":"915:133:6","stateMutability":"view","superFunction":695,"visibility":"external"},{"body":{"id":684,"nodeType":"Block","src":"1499:133:6","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":672,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1517:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30786666666666666666","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1532:10:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"1517:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4552433136353a20696e76616c696420696e74657266616365206964","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1544:30:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee","typeString":"literal_string \"ERC165: invalid interface id\""},"value":"ERC165: invalid interface id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee","typeString":"literal_string \"ERC165: invalid interface id\""}],"id":671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[2296,2297],"referencedDeclaration":2297,"src":"1509:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1509:66:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"1509:66:6"},{"expression":{"argumentTypes":null,"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":678,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"1585:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":680,"indexExpression":{"argumentTypes":null,"id":679,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1606:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1585:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1621:4:6","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1585:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":683,"nodeType":"ExpressionStatement","src":"1585:40:6"}]},"documentation":"@dev Registers the contract as an implementer of the interface defined by\n`interfaceId`. Support of the actual ERC165 interface is automatic and\nregistering its interface id is not required.\n     * See `IERC165.supportsInterface`.\n     * Requirements:\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).","id":685,"implemented":true,"kind":"function","modifiers":[],"name":"_registerInterface","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"name":"interfaceId","nodeType":"VariableDeclaration","scope":685,"src":"1470:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":667,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1470:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"1469:20:6"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"1499:0:6"},"scope":686,"src":"1442:190:6","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"}],"scope":687,"src":"222:1412:6"}],"src":"0:1635:6"},"bytecode":"0x","deployedBytecode":"0x","compiler":{"name":"solc","version":"0.5.10+commit.5a6ea5b1.Emscripten.clang","optimizer":{},"evmVersion":"constantinople"}}
