{"fileName":"Address.sol","contractName":"Address","source":"pragma solidity ^0.5.0;\n\n/**\n * @dev Collection of functions related to the address type,\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * This test is non-exhaustive, and there may be false-negatives: during the\n     * execution of a contract's constructor, its address will be reported as\n     * not containing a contract.\n     *\n     * > It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n","sourcePath":"openzeppelin-solidity/contracts/utils/Address.sol","sourceMap":"94:863:18:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;225:41;222:2;;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24;2:356","deployedSourceMap":"94:863:18:-;;;;;;;;;;;;;;","abi":[],"ast":{"absolutePath":"openzeppelin-solidity/contracts/utils/Address.sol","exportedSymbols":{"Address":[2215]},"id":2216,"nodeType":"SourceUnit","nodes":[{"id":2198,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:18"},{"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":"@dev Collection of functions related to the address type,","fullyImplemented":true,"id":2215,"linearizedBaseContracts":[2215],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":2213,"nodeType":"Block","src":"608:347:18","statements":[{"assignments":[2206],"declarations":[{"constant":false,"id":2206,"name":"size","nodeType":"VariableDeclaration","scope":2213,"src":"805:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2207,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"805:12:18"},{"externalReferences":[{"size":{"declaration":2206,"isOffset":false,"isSlot":false,"src":"894:4:18","valueSize":1}},{"account":{"declaration":2200,"isOffset":false,"isSlot":false,"src":"914:7:18","valueSize":1}}],"id":2208,"nodeType":"InlineAssembly","operations":"{ size := extcodesize(account) }","src":"883:41:18"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2209,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"940:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:1:18","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"940:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2204,"id":2212,"nodeType":"Return","src":"933:15:18"}]},"documentation":"@dev Returns true if `account` is a contract.\n     * This test is non-exhaustive, and there may be false-negatives: during the\nexecution of a contract's constructor, its address will be reported as\nnot containing a contract.\n     * > It is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.","id":2214,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"name":"account","nodeType":"VariableDeclaration","scope":2214,"src":"562:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"561:17:18"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"name":"","nodeType":"VariableDeclaration","scope":2214,"src":"602:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2202,"name":"bool","nodeType":"ElementaryTypeName","src":"602:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"601:6:18"},"scope":2215,"src":"542:413:18","stateMutability":"view","superFunction":null,"visibility":"internal"}],"scope":2216,"src":"94:863:18"}],"src":"0:958:18"},"bytecode":"0x605e6026600b82828239805160001a6073141515601857fe5b30600052607381538281f350fe73000000000000000000000000000000000000000030146080604052600436106023575b60006000fdfea265627a7a72305820c569a049ce1aad48cd77a5bf2f5fa3f598165927371b1702eec058dedfeba26464736f6c634300050a0032","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600436106023575b60006000fdfea265627a7a72305820c569a049ce1aad48cd77a5bf2f5fa3f598165927371b1702eec058dedfeba26464736f6c634300050a0032","compiler":{"name":"solc","version":"0.5.10+commit.5a6ea5b1.Emscripten.clang","optimizer":{},"evmVersion":"constantinople"}}
